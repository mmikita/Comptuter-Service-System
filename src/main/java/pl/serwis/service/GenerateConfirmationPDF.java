package pl.serwis.service;

import java.awt.Color;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Date;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.FileCopyUtils;

import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import com.lowagie.text.Element;
import com.lowagie.text.Font;
import com.lowagie.text.Paragraph;
import com.lowagie.text.pdf.PdfWriter;

import pl.serwis.model.Transaction;
import pl.serwis.repository.TransactionRepository;

@Service
public class GenerateConfirmationPDF {

	@Autowired
	TransactionRepository repository;

	private static Font catFont = new Font(Font.ITALIC, 18, Font.BOLD);
	private static Font redFont = new Font(Font.TIMES_ROMAN, 12, Font.NORMAL,
			Color.BLACK);
	private static Font smallBold = new Font(Font.NORMAL, 12, Font.BOLD);
	public void generateRaport() {
		Document document = new Document();
		try {
			PdfWriter.getInstance(document,
					new FileOutputStream(System.getProperty("user.dir")
							+ "\\src\\main\\resources\\plikPDF.pdf"));
			document.open();
		} catch (FileNotFoundException | DocumentException e) {
			System.out.println("Nie znaleziono pliku");
			e.printStackTrace();
		}
		document.addTitle("My first PDF");
		document.addSubject("Using iText");
		document.addKeywords("Java, PDF, iText");
		document.addAuthor("Lars Vogel");
		document.addCreator("Lars Vogel");

		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		preface.add(new Paragraph("Title of the document", catFont));

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph(
				"Report generated by: " + System.getProperty("user.name") + ", " //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
						+ new Date(),
				smallBold));
		addEmptyLine(preface, 3);
		preface.add(new Paragraph(
				"This document describes something which is very important ",
				smallBold));

		addEmptyLine(preface, 8);

		preface.add(new Paragraph(
				"This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
				redFont));

		try {
			document.add(preface);
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		// Start a new page
		document.newPage();
		document.close();

	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}

	public void GenerateAndDownloadRaport(Long id, HttpServletResponse response)
			throws DocumentException, IOException {
		Object lock = new Object();
		synchronized (lock) {

			Document document = new Document();

			try {
				PdfWriter.getInstance(document,
						new FileOutputStream(System.getProperty("user.dir")
								+ "\\src\\main\\resources\\plikPDF.pdf"));
				document.open();
			} catch (FileNotFoundException | DocumentException e) {
				System.out.println("Nie znaleziono pliku");
				e.printStackTrace();
			}
			Transaction tr = repository.getOne(id);
			document.addTitle("Naprawa nr: " + tr.getId());
			document.addSubject("Raport naprawy");
			document.addKeywords("Naprawa");
			document.addAuthor("Krzysztof");
			document.addCreator("PoÅ‚onowski");

			Paragraph preface = new Paragraph();
			preface.setAlignment(Element.ALIGN_CENTER);
			addEmptyLine(preface, 1);
			preface.add(
					new Paragraph("Raport naprawy nr: " + tr.getId(), catFont));
			addEmptyLine(preface, 1);
			preface.add(new Paragraph("status naprawy: " + tr.getStatus(),
					smallBold));
			addEmptyLine(preface, 1);
			preface.add(new Paragraph("opis: " + tr.getComments(),
					smallBold));
			document.add(preface);

			document.newPage();

			document.close();

			File file = new File(System.getProperty("user.dir")
					+ "\\src\\main\\resources\\plikPDF.pdf");
			InputStream in = new FileInputStream(file);
			response.setContentType("pdf");
			response.setHeader("Content-Disposition",
					"attachment; filename=" + file.getName());
			response.setHeader("Content-Length", String.valueOf(file.length()));
			FileCopyUtils.copy(in, response.getOutputStream());

		}

	}
}
